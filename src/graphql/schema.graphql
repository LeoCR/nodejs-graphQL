type Query {
  product(id:ID!): Product
  products:[Product!]!
}

type Mutation{
  addProduct(dto:CreateProductDto!):Product
  updateProduct(id:ID!, dto:UpdateProductDto!):Product
  deleteProduct(id:ID!): ID
  login(email: String!,password:String!): AuthResponse
  addCategory(dto:CreateCategoryDto!): Category
}

type Product{
  id:ID!
  name: String!
  price: Float!
  description:String!
  image:String!
  createdAt: String!
  categoryId:ID!
  category: Category!
}
type Category{
  id: ID!
  name: String!
  image:String!
  createdAt:String!
}
type User {
  id: ID!
  email: String!
  role:String!
  createdAt:String!
}
type AuthResponse{
  access_token: String
  user: User
}

input UpdateProductDto{
  name: String
  price: Float
  description: String
  image: String
  categoryId: ID
}
input CreateProductDto{
  name: String!
  price: Float!
  description:String!
  image:String!
  categoryId: ID!
}

input CreateCategoryDto{
  name: CategoryNameType!
  image: String!
}

scalar CategoryNameType
